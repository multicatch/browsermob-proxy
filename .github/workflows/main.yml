name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

  workflow_dispatch:

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Fetch all branches
        run: git fetch --unshallow && git fetch origin +refs/heads/master:refs/remotes/origin/master

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build project
        run: |
          mvn --batch-mode clean install
        env:
          MOZ_HEADLESS: 1

      - name: Upload compiled files
        uses: actions/upload-artifact@v2
        with:
          name: browsermob-proxy-target
          path: '*/target/'

  deploy_to_sonatype:
    name: Deploy to Sonatype repository
    if:
      contains('
      refs/heads/develop
      ', github.ref)
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Download compiled files
        uses: actions/download-artifact@v2
        with:
          name: browsermob-proxy-target

      - name: Deploy to Sonatype
        run: chmod +x maven_deploy.sh && ./maven_deploy.sh
        env:
          OSSRH_JIRA_USERNAME: ${{ secrets.OSSRH_JIRA_USERNAME }}
          OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}
          GPG_SIGNINGKEY: ${{ secrets.GPG_SIGNINGKEY }}
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
